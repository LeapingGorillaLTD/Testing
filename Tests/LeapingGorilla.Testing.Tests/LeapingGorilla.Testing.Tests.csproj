<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{BD802FC8-1692-4461-8FD6-C394242EFE8A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>LeapingGorilla.Testing.Tests</RootNamespace>
    <AssemblyName>LeapingGorilla.Testing.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release-Net45|AnyCPU'">
    <OutputPath>bin\Release-Net45\</OutputPath>
    <DefineConstants>TRACE;NET45</DefineConstants>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release-Net40|AnyCPU'">
    <OutputPath>bin\Release-Net40\</OutputPath>
    <DefineConstants>NET40</DefineConstants>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release-Net35|AnyCPU'">
    <OutputPath>bin\Release-Net35\</OutputPath>
    <DefineConstants>NET35</DefineConstants>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
  </PropertyGroup>
  <ItemGroup Condition="'$(Configuration)|$(Platform)' != 'Release-Net35|AnyCPU'">
    <Reference Include="NSubstitute">
      <HintPath>..\..\packages\NSubstitute.1.9.2.0\lib\NET40\NSubstitute.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\..\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
  </ItemGroup>
  <ItemGroup Condition="'$(Configuration)|$(Platform)' == 'Release-Net35|AnyCPU'">
    <Reference Include="NSubstitute">
      <HintPath>..\..\packages\NSubstitute.1.9.2.0\lib\NET35\NSubstitute.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\..\packages\NUnit.2.6.4\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Mocks\ClassTakingNullableInt.cs" />
    <Compile Include="WhenTestingAnAsyncMethod.cs" />
    <Compile Include="WhenTestingANullDependencyForNullableValueType.cs" />
    <Compile Include="WhenTestingMultipleGivenMethodsUsingTheAttributeConstructor.cs" />
    <Compile Include="WhenTestingNullDependencyInjectionOnNonNullableType.cs" />
    <Compile Include="WhenTestingSetupWithAWhenMethodThatHasAReturnType.cs" />
    <Compile Include="WhenTestingSetupWithAWhenMethodWithParameters.cs" />
    <Compile Include="WhenTestingSetupWithTooManyWhenFields.cs" />
    <Compile Include="WhenTestingMultipleGivenMethods.cs" />
    <Compile Include="WhenTestingSetupWithAGivenMethodThatHasAReturnType.cs" />
    <Compile Include="WhenTestingSetupWithAGivenMethodWithParameters.cs" />
    <Compile Include="Mocks\ClassRaisingAnEvent.cs" />
    <Compile Include="Mocks\ClassWithMultipleParametersOfSameType.cs" />
    <Compile Include="Mocks\IMockEventRaiser.cs" />
    <Compile Include="Mocks\IMockLogger.cs" />
    <Compile Include="Mocks\SimpleClassToTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="WhenTestingAttemptingToMockAnInvalidType.cs" />
    <Compile Include="WhenTestingDependencyInjection.cs" />
    <Compile Include="WhenTestingDependencyInjectionWithAField.cs" />
    <Compile Include="WhenTestingDependencyInjectionWithInvalidDependencies.cs" />
    <Compile Include="WhenTestingDependencyInjectionWithMissingDependencies.cs" />
    <Compile Include="WhenTestingDependencyInjectionWithNoItemUnderTest.cs" />
    <Compile Include="WhenTestingDependencyInjectionWithWrongDependencies.cs" />
    <Compile Include="WhenTestingMocking.cs" />
    <Compile Include="WhenTestingGivenMethodsWithDifferentAccessLevels.cs" />
    <Compile Include="WhenTestingStubbing.cs" />
    <Compile Include="WhenTestingANullDependency.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\LeapingGorilla.Testing\LeapingGorilla.Testing.csproj">
      <Project>{7FC237D4-8C1F-4841-8B66-CE7F85581314}</Project>
      <Name>LeapingGorilla.Testing</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>